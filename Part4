def func2(arg25, arg26):
    var27 = func5()
    var28 = func8()
    var54 = var31(var28, arg25)
    var55 = arg26 | arg26 + (var54 | arg26)
    var56 = -698 - (-966151159 - (arg25 - 494))
    var57 = var55 | (var27 ^ var54) & var56
    var58 = -1042316678 & var57 & var28 - var28
    var59 = (var55 - 292) ^ var56
    var60 = (var58 + arg26) + -367
    var61 = arg25 | (var58 | -58)
    var62 = var57 | var28 & var54 & 2006008412
    var63 = -1177192379 & var58
    var64 = (arg26 | (-1718146526 + -376371835)) & var57
    var65 = ((var62 ^ var55) ^ var55) ^ var61
    result = var57 & (((var57 | ((var61 - arg26 + var64) | arg25) ^ var54 + var64) ^ var57 & var55 - var27) - var27)
    return result
def func11(arg32, arg33):
    var34 = arg33 & (1539371717 & arg33) | arg33
    var35 = arg32 ^ var34 ^ arg32 + var34
    var36 = -216 + (arg32 | var35) | var35
    var37 = (var35 & arg33) + var35 ^ arg32
    var38 = (var36 + 29 - var37) ^ -298
    var39 = (var38 - var37) & -225 ^ -406824827
    var40 = (var38 - var37) - var37 & var35
    var41 = ((-266 + var34) + -386922813) + arg32
    var42 = var40 + var40 | 1018207969
    var43 = 128 + arg32 & var36 & var34
    var44 = (256 ^ var37 + -1681715318) + var37
    var45 = ((arg33 ^ var35) ^ arg32) - var42
    var46 = var45 | var39 & var40
    var47 = -768303042 ^ var34
    var48 = arg33 | var46 + var38
    var49 = var38 ^ var35 + var46 | var41
    if var37 < var49:
        var50 = (var42 & var39) & arg33
    else:
        var50 = arg33 ^ (arg33 | var39) & arg33
    var51 = var40 ^ (var47 + var35) | var36
    var52 = var39 - var44
    var53 = var43 ^ 1864911679 | var44 + var43
    result = var45 & (var39 - 780594661 + ((var48 + (((var35 ^ var49) ^ var42 & var41) - var52 | var48 & var39)) - var51))
    return result
def func10():
    closure = [2]
    def func9(arg29, arg30):
        closure[0] += func11(arg29, arg30)
        return closure[0]
    func = func9
    return func
var31 = func10()
def func8():
    func6()
    result = len(range(34))
    func7()
    return result
def func7():
    global len
    del len
def func6():
    global len
    len = lambda x : -5
def func5():
    func3()
    result = len([(-4 | ((i - ((-3 + -1 - -3 & -5 | -4 + 4) | -4 - 4)) ^ -3)) + 3 for i in ((i - -4) | -5 for i in range(25))])
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -3
def func1(arg1, arg2):
    var3 = arg1 + arg1 - arg2 ^ arg1
    if arg1 < arg2:
        var4 = (166 & var3 & arg2) | 2133792531
    else:
        var4 = 1387153931 | var3
    var5 = -2145466877 ^ ((913466873 | var3) - arg1)
    var6 = -104 & arg2
    var7 = var6 | (arg1 | var3) + arg2
    var8 = var5 | ((-2001059033 + var5) + var6)
    var9 = (var5 - var7 - -940) + var5
    var10 = (arg1 & var6) | var7 - var5
    var11 = (var5 + var7 - var9) ^ arg2
    var12 = (var9 ^ var11) | (1848557241 & arg1)
    var13 = (var11 | var6) & var8 & var7
    var14 = (var6 + var13) & var9 | var5
    var15 = (var8 & var12) | var8 & var6
    var16 = var13 - (var11 ^ 447644027) - var7
    var17 = var6 | var3 + var9 | var14
    var18 = var7 ^ (var11 - var12 & var13)
    var19 = (arg2 | var14) | var5 - -755
    var20 = 1874529622 & var8
    var21 = var12 & var5 & var16 - var11
    if var14 < var5:
        var22 = 1764832267 ^ arg2 & (var14 ^ var20)
    else:
        var22 = var18 & var13
    var23 = var5 - var14
    var24 = 902 & -1366527729
    result = var18 + var14
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 25'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 66'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
